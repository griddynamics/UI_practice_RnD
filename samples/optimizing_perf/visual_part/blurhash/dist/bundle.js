(()=>{"use strict";const t=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","#","$","%","*","+",",","-",".",":",";","=","?","@","[","]","^","_","{","|","}","~"],e=e=>{let n=0;for(let r=0;r<e.length;r++){const o=e[r];n=83*n+t.indexOf(o)}return n},n=t=>{let e=t/255;return e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)},r=t=>{let e=Math.max(0,Math.min(1,t));return e<=.0031308?Math.round(12.92*e*255+.5):Math.round(255*(1.055*Math.pow(e,1/2.4)-.055)+.5)},o=(t,e)=>(t<0?-1:1)*Math.pow(Math.abs(t),e);class a extends Error{constructor(t){super(t),this.name="ValidationError",this.message=t}}const s=t=>{const e=t>>8&255,r=255&t;return[n(t>>16),n(e),n(r)]},h=(t,e)=>{const n=Math.floor(t/361),r=Math.floor(t/19)%19,a=t%19;return[o((n-9)/9,2)*e,o((r-9)/9,2)*e,o((a-9)/9,2)*e]},l=(t,n,o,l)=>{(t=>{if(!t||t.length<6)throw new a("The blurhash string must be at least 6 characters");const n=e(t[0]),r=Math.floor(n/9)+1,o=n%9+1;if(t.length!==4+2*o*r)throw new a(`blurhash length mismatch: length is ${t.length} but it should be ${4+2*o*r}`)})(t),l|=1;const c=e(t[0]),i=Math.floor(c/9)+1,d=c%9+1,g=(e(t[1])+1)/166,u=new Array(d*i);for(let n=0;n<u.length;n++)if(0===n){const r=e(t.substring(2,6));u[n]=s(r)}else{const r=e(t.substring(4+2*n,6+2*n));u[n]=h(r,g*l)}const m=4*n,f=new Uint8ClampedArray(m*o);for(let t=0;t<o;t++)for(let e=0;e<n;e++){let a=0,s=0,h=0;for(let r=0;r<i;r++)for(let l=0;l<d;l++){const c=Math.cos(Math.PI*e*l/n)*Math.cos(Math.PI*t*r/o);let i=u[l+r*d];a+=i[0]*c,s+=i[1]*c,h+=i[2]*c}let l=r(a),c=r(s),g=r(h);f[4*e+0+t*m]=l,f[4*e+1+t*m]=c,f[4*e+2+t*m]=g,f[4*e+3+t*m]=255}return f};(async function(t){const e="gallery_render";console.time(e);const n=document.querySelector(".app__gallery");!function(t){if(t)for(;t.firstChild;)t.removeChild(t.firstChild)}(n);const r=t.map((t=>function(t,e){const{hash:n,width:r,height:o,url:a}=t,s=l(n,r,o),h=document.createElement("canvas");h.classList.add("app__canvas_area"),h.width=r,h.height=o;const c=h.getContext("2d"),i=c.createImageData(r,o);return i.data.set(s),c.putImageData(i,0,0),e.container.append(h),new Promise(((t,e)=>{const n=new Image;n.onload=()=>t(n),n.onerror=t=>e(t),n.src=a})).then((t=>{h.width=t.width,h.height=t.height,c.drawImage(t,0,0)}))}(t,{width:64,height:64,container:n})));console.log(`Rendered ${t.length} placeholders`),await Promise.all(r),console.log("Rendered real images"),console.timeEnd(e)})(window.__img__hashes__||[]).catch(null)})();